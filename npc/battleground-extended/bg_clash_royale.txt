//===== eAthena Script ======================================= 
//= Clash Royale Script
//= v2 : Joinbgevent system
//===== By: ================================================== 
//= Vykimo
//============================================================

-	script	ClashRoyaleQueue	-1,{
OnInit:
	.CR_Names$ = "Clash Royale";
	.CR_Queue = bg_queue_create(Battleground Extension,"ClashRoyaleQueue::OnJoinEvent",40);
	// Team Building Mode : 0 = Lineal | 1 = Random | 2 = Class Priority
	.TeamMode = 1;
	.CR_Min = 1;
	.CR_Max = 5;
	.CR_Arena$ = "ClashRoyale";
	bindatcmd "leavebgevent", strnpcinfo(3)+"::OnDoLeave";
	bindatcmd "joinbgevent", strnpcinfo(3)+"::OnDoJoin";
	end;
	
// ======================================== Commandes ========================================
// @joinbgevent
OnDoJoin: 	
	if($@CR_Status == 2) {
		dispbottom "Please retry in few seconds, just wait for the end of the current mode.";
	} else {
		if(BaseLevel < 40) dispbottom "@joinbgevent failed. Level 40 is required to compete.";
		else {
			if( checkquest(8506,PLAYTIME) == 2 )
				erasequest 8506;

			if( checkquest(8506,PLAYTIME) != -1 ) {
				dispbottom "@joinbgevent failed. You are a deserter. You cannot participate for a short time.";
				end;
			}
			dispbottom "@joinbgevent trying to join the queue. @leavebgevent to quit the queue.";
			bg_queue_join(.CR_Queue);
		}
	}
	end;
// @leavebgevent
OnDoLeave: 
	bg_queue_leave(.CR_Queue);
	end;
	
OnRotate:
	set $@CR_Status, 0;	
	// Warps Teams
	if( $@CR_Team1 ) { bg_warp $@CR_Team1,"bat_room",155,150; bg_destroy $@CR_Team1; set $@CR_Team1, 0; }
	if( $@CR_Team2 ) { bg_warp $@CR_Team2,"bat_room",155,150; bg_destroy $@CR_Team2; set $@CR_Team2, 0; }
	
OnJoinEvent:
	if( $@CR_Status == 2 )
		end;

	set .@Queue_Count, bg_queue_data(.CR_Queue,0);
	
	sc_end SC_SPIRIT;
	
	switch( $@CR_Status )
	{
	case 0: // Idle - Ready to Start
	
		set .@Req, .CR_Min * 2;
		if( bg_queue_checkstart(.CR_Queue,.TeamMode,2,.CR_Min) )
		{
			donpcevent .CR_Arena$ + "::OnBuildTeams";
			bg_queue2teams .CR_Queue,.CR_Min,.CR_Max,.TeamMode,$@CR_Team1,$@CR_Team2;			
			set $@CR_Status,1;			
			bgannounce "[ Battleground Extension ] ~ " + .CR_Names$ + " -- Started. You can join the mode with @joinbgevent.",0x00ffaa;			
			donpcevent .CR_Arena$ + "::OnReady";
		}
		else
		{
			sleep 500;
			bgannounce "[ Battleground Extension ] ~ " + .CR_Names$ + " -- " + (.@Req - .@Queue_Count) + " players left -- @joinbgevent to join the battle.",0x00ffaa;
		}		
	
		break;
	case 1: // Running - Others can join
		if( .@Queue_Count > 0 )
		{	
			bg_balance_teams .CR_Queue,.CR_Max,$@CR_Team1,$@CR_Team2;
		}
		set .@BG_Count1, bg_get_data($@CR_Team1,0);
		set .@BG_Count2, bg_get_data($@CR_Team2,0);
		
		if(.@BG_Count1 <= 0 || .@BG_Count2 <= 0) {		
		
			bgannounce "[ Battleground Extension ] - No more enough players. " + .CR_Names$ + " will end soon.",0xde55ff;
			donpcevent .CR_Arena$ + "::OnPrematureEnd";
			
		} else {
			bgannounce "[ Battleground Extension ] - " + .CR_Names$ + " -- B: " + .@BG_Count1 + "/" + .CR_Max + ", R: " + .@BG_Count2 + "/" + .CR_Max + " (Playing)",0xde55ff;
		}
		break;
	}
	end;
}

-	script	ClashRoyale	-1,{
OnInit:
	// Set monsters attributes
	// 2 firsts monsters are Canon & Tower Canon
	// Others are available in NPC
	//
	//							Canon	Tower	Mob1	Mob2	Mob3
	setarray $@CR_Monsters[0], 	3957, 	3958,	1949, 	1602, 	1603;
	setarray $@CR_MElixirs[0], 		-1,		-1, 	5, 		4, 		3;
	setarray $@CR_M_Size[0], 		0,		2, 		1,		0, 		0;
	setarray $@CR_M_HP[0], 		1500,	5000, 	400,	300, 	250;
	setarray $@CR_M_Atk_min[0],	100, 	150, 	110, 	100, 	100;
	setarray $@CR_M_Atk_max[0],	300, 	450, 	400, 	300, 	200;
	setarray $@CR_M_Matk_min[0],	50, 	70, 	40, 	30, 	20;
	setarray $@CR_M_Matk_max[0],	100, 	200, 	60, 	50, 	40;
	setarray $@CR_M_Def[0], 		40, 	50, 	40, 	30, 	20;
	setarray $@CR_M_Mdef[0], 		40, 	50, 	40, 	30, 	20;
	setarray $@CR_M_Range[0], 	7, 		9,	 	1, 		1, 		1;
	setarray $@CR_M_Str[0], 		30, 	40, 	30, 	20, 	10;
	setarray $@CR_M_Agi[0], 		30, 	40, 	30, 	30, 	30;
	setarray $@CR_M_Vit[0], 		30, 	40, 	30, 	30, 	30;
	setarray $@CR_M_Dex[0], 		30, 	40, 	55, 	60, 	50;
	setarray $@CR_M_Luk[0], 		30, 	45, 	30, 	30, 	50;
	setarray $@CR_M_Int[0], 		30, 	40, 	30, 	30, 	30;
	setarray $@CR_M_Speed[0],	450,	450,	450,	450,	400;
	setcell "clashroyale",62,63,69,86,cell_basilica,1;
	end;
	
OnBuildTeams:
	// Rouge
	set $@CR_Team1,bg_team_create("clashroyale",20,18,1,"ClashRoyale::OnClashRoyaleQuit","ClashRoyale::OnClashRoyaleDie",$Palette_BG_Rouge);
	// Bleu
	set $@CR_Team2,bg_team_create("clashroyale",210,18,0,"ClashRoyale::OnClashRoyaleQuit","ClashRoyale::OnClashRoyaleDie",$Palette_BG_Bleu);	
	end;
	
OnClashRoyaleDie:
	end;
	
OnClashRoyaleQuit:
	setquest 8506; // Deserter
	if( $@CR_Status != 0 && getvariableofnpc(.CR_Arena$,"ClashRoyaleQueue") == "ClashRoyale" )
		donpcevent "ClashRoyaleQueue::OnJoinEvent";
	end;
OnPrematureEnd:
	mapannounce "clashroyale.gat", "End of the game because not enough players !",bc_blue;
	donpcevent "TimerMatchCR::OnPrematureEnd";
	end;
	
OnReady:
	if( getvariableofnpc(.CR_Arena$,"ClashRoyaleQueue") != "ClashRoyale" )
		end;
		
	killmonsterall "clashroyale";
	
	disablenpc "Red Crystal#11CR";
	disablenpc "Red Crystal#12CR";
	disablenpc "Blue Crystal#21CR";
	disablenpc "Blue Crystal#22CR";
	
	// warp des teams rouge et bleu
	bg_warp $@CR_Team1,"clashroyale",65,86;
	bg_warp $@CR_Team2,"clashroyale",65,63;
	// create tower
	deletearray .@mobidC;
	deletearray .@mobidCT;
	setarray .@mobidC[getarraysize(.@mobidC)], bg_monster( $@CR_Team1,"clashroyale",60,93,"Tower",$@CR_Monsters[0],"ClashRoyale::OnKillTower11",$@CR_M_Size[0]);
	setarray .@mobidCT[getarraysize(.@mobidCT)], bg_monster( $@CR_Team1,"clashroyale",65,95,"King Tower",$@CR_Monsters[1],"ClashRoyale::OnKillKingTower1",$@CR_M_Size[1]);
	setarray .@mobidC[getarraysize(.@mobidC)], bg_monster( $@CR_Team1,"clashroyale",71,93,"Tower",$@CR_Monsters[0],"ClashRoyale::OnKillTower12",$@CR_M_Size[0]);
	
	setarray .@mobidC[getarraysize(.@mobidC)], bg_monster( $@CR_Team2,"clashroyale",60,56,"Tower",$@CR_Monsters[0],"ClashRoyale::OnKillTower21",$@CR_M_Size[0]);
	setarray .@mobidCT[getarraysize(.@mobidCT)], bg_monster( $@CR_Team2,"clashroyale",65,54,"King Tower",$@CR_Monsters[1],"ClashRoyale::OnKillKingTower2",$@CR_M_Size[1]);
	setarray .@mobidC[getarraysize(.@mobidC)], bg_monster( $@CR_Team2,"clashroyale",71,56,"Tower",$@CR_Monsters[0],"ClashRoyale::OnKillTower22",$@CR_M_Size[0]);

	for(.@i=0;.@i<getarraysize(.@mobidC);.@i++) {
		setunitdata .@mobidC[.@i],UMOB_MAXHP,		$@CR_M_HP[0];
		setunitdata .@mobidC[.@i],UMOB_HP,		$@CR_M_HP[0];
		setunitdata .@mobidC[.@i],UMOB_ATKMIN,	$@CR_M_Atk_min[0];
		setunitdata .@mobidC[.@i],UMOB_ATKMAX,	$@CR_M_Atk_max[0];
		setunitdata .@mobidC[.@i],UMOB_MATKMIN,	$@CR_M_Matk_min[0];
		setunitdata .@mobidC[.@i],UMOB_MATKMAX,	$@CR_M_Matk_max[0];
		setunitdata .@mobidC[.@i],UMOB_DEF,		$@CR_M_Def[0];
		setunitdata .@mobidC[.@i],UMOB_MDEF,		$@CR_M_Mdef[0];
		setunitdata .@mobidC[.@i],UMOB_ATKRANGE,	$@CR_M_Range[0];
		setunitdata .@mobidC[.@i],UMOB_STR,		$@CR_M_Str[0];
		setunitdata .@mobidC[.@i],UMOB_AGI,		$@CR_M_Agi[0];
		setunitdata .@mobidC[.@i],UMOB_VIT,		$@CR_M_Vit[0];
		setunitdata .@mobidC[.@i],UMOB_DEX,		$@CR_M_Dex[0];
		setunitdata .@mobidC[.@i],UMOB_LUK,		$@CR_M_Luk[0];
		setunitdata .@mobidC[.@i],UMOB_INT,		$@CR_M_Int[0];
		setunitdata .@mobidC[.@i],UMOB_SPEED,		$@CR_M_Speed[0];
	}
	for(.@i=0;.@i<getarraysize(.@mobidCT);.@i++) {
		setunitdata .@mobidCT[.@i],UMOB_MAXHP,	$@CR_M_HP[1];
		setunitdata .@mobidCT[.@i],UMOB_HP,		$@CR_M_HP[1];
		setunitdata .@mobidCT[.@i],UMOB_ATKMIN,	$@CR_M_Atk_min[1];
		setunitdata .@mobidCT[.@i],UMOB_ATKMAX,	$@CR_M_Atk_max[1];
		setunitdata .@mobidCT[.@i],UMOB_MATKMIN,	$@CR_M_Matk_min[1];
		setunitdata .@mobidCT[.@i],UMOB_MATKMAX,	$@CR_M_Matk_max[1];
		setunitdata .@mobidCT[.@i],UMOB_DEF,		$@CR_M_Def[1];
		setunitdata .@mobidCT[.@i],UMOB_MDEF,		$@CR_M_Mdef[1];
		setunitdata .@mobidCT[.@i],UMOB_ATKRANGE,	$@CR_M_Range[1];
		setunitdata .@mobidCT[.@i],UMOB_STR,		$@CR_M_Str[1];
		setunitdata .@mobidCT[.@i],UMOB_AGI,		$@CR_M_Agi[1];
		setunitdata .@mobidCT[.@i],UMOB_VIT,		$@CR_M_Vit[1];
		setunitdata .@mobidCT[.@i],UMOB_DEX,		$@CR_M_Dex[1];
		setunitdata .@mobidCT[.@i],UMOB_LUK,		$@CR_M_Luk[1];
		setunitdata .@mobidCT[.@i],UMOB_INT,		$@CR_M_Int[1];
		setunitdata .@mobidCT[.@i],UMOB_SPEED,	$@CR_M_Speed[1];
	}
	
	// Set ElixirCR
	set $@CR_tower1, 0;
	set $@CR_tower2, 0;
	set $@CR_ElixirCR1, 7;
	set $@CR_ElixirCR2, 7;
	bg_updatescore "clashroyale",$@CR_ElixirCR1,$@CR_ElixirCR2;
	initnpctimer;	
	end;
	
OnTimer3000:
	mapannounce "clashroyale","Start of the match in 20 seconds.",0;	
	end;
OnTimer5000:
	mapannounce "clashroyale", "Start of the match in 15 seconds.",0;	
	end;
OnTimer10000:
	mapannounce "clashroyale","Start of the match in 10 seconds.",0;	
	end;
OnTimer15000:
	mapannounce "clashroyale","Start of the match in 5 seconds.",0;	
	end;	
OnTimer20000:
	stopnpctimer;
	if($@CR_Status != 1) end;
	mapannounce "clashroyale","Match has just begun !",0;	
	donpcevent "TimerMatchCR::OnStartMatch";
	donpcevent "ElixirCR::OnStartMatch";
	donpcevent "MonsterCR::OnStartMatch";
	enablenpc "Red Crystal#11CR";
	enablenpc "Red Crystal#12CR";
	enablenpc "Blue Crystal#21CR";
	enablenpc "Blue Crystal#22CR";
	end;
	
OnKillTower11:
	$@CR_tower1 += 2;
	disablenpc "Red Crystal#11CR";
	donpcevent "CR1TOWER1::OnDestroy";
	mapannounce "clashroyale.gat", "One Red Tower destroyed ! Be careful.",bc_blue;
	end;
OnKillTower12:
	$@CR_tower1 += 2;
	disablenpc "Red Crystal#12CR";
	donpcevent "CR1TOWER2::OnDestroy";
	mapannounce "clashroyale.gat", "One Red Tower destroyed ! Be careful.",bc_blue;
	end;
	
OnKillTower21:
	$@CR_tower2 += 2;
	disablenpc "Red Crystal#21CR";
	donpcevent "CR2TOWER1::OnDestroy";
	mapannounce "clashroyale.gat", "One Blue Tower destroyed ! Be careful.",bc_blue;
	end;
OnKillTower22:
	$@CR_tower2 += 2;
	disablenpc "Red Crystal#22CR";
	donpcevent "CR2TOWER2::OnDestroy";
	mapannounce "clashroyale.gat", "One Blue Tower destroyed ! Be careful.",bc_blue;
	end;
	
OnKillKingTower1:
	$@CR_tower1 += 10;
	donpcevent "CR1TOWERK::OnDestroy";
	mapannounce "clashroyale.gat", "Red King Tower destroyed !",bc_blue;
	donpcevent "TimerMatchCR::OnPrematureEnd";
	end;
OnKillKingTower2:
	$@CR_tower2 += 10;
	donpcevent "CR2TOWERK::OnDestroy";
	mapannounce "clashroyale.gat", "Blue King Tower destroyed !",bc_blue;
	donpcevent "TimerMatchCR::OnPrematureEnd";
	end;
}

clashroyale,60,90,0	script	CR1TOWER1	139,{
OnDestroy:
	specialeffect 330;
	specialeffect 583;
	specialeffect 585;
	specialeffect 901;
	end;
OnSpawn:
	specialeffect 773;
	end;
}
clashroyale,65,90,0	duplicate(CR1TOWER1)	CR1TOWERK	139
clashroyale,71,90,0	duplicate(CR1TOWER1)	CR1TOWER2	139
clashroyale,60,59,0	duplicate(CR1TOWER1)	CR2TOWER1	139
clashroyale,65,59,0	duplicate(CR1TOWER1)	CR2TOWERK	139
clashroyale,71,59,0	duplicate(CR1TOWER1)	CR2TOWER2	139

clashroyale,0,0,0	script	MonsterCR	-1,{

function SF_CheckOpponent {
	.@j = getarg(0);
	.@k = getarg(1);
	for(.@i=0;.@i<getarraysize(getd("$@CR_MonsterArray"+.@j+""+.@k));.@i++) {
		if(unitexists(getd("$@CR_MonsterArray"+.@j+""+.@k+"["+.@i+"]"))) {
			getmapxy(.@mapname$, .@x, .@y, UNITTYPE_MOB, getd("$@CR_MonsterArray"+.@j+""+.@k+"["+.@i+"]"));
			if(.@j == 2) {
				if(.@k == 1) {
					if(.@x>=59 && .@y>=72 && .@x<=60 && .@y<=90) {
						return 1;
					}
				} else {
					if(.@x>=71 && .@y>=72 && .@x<=72 && .@y<=90) {
						return 1;
					}
				}
			} else {
				if(.@k == 1) {
					if(.@x>=59 && .@y>=59 && .@x<=60 && .@y<=77) {
						return 1;
					}
				} else {
					if(.@x>=71 && .@y>=59 && .@x<=72 && .@y<=77) {
						return 1;
					}
				}
			}
		}
	}
	return 0;
}
	
OnStartMatch:
	initnpctimer;
	end;
	
OnTimer1000:
	stopnpctimer;
	if($@CR_Status != 1) end;
	for(.@k=1;.@k<3;.@k++) {
		for(.@j=1;.@j<3;.@j++) {
			for(.@i=0;.@i<getarraysize(getd("$@CR_MonsterArray"+.@j+""+.@k));.@i++) {
				if(unitexists(getd("$@CR_MonsterArray"+.@j+""+.@k+"["+.@i+"]"))) {
					getmapxy(.@mapname$, .@x, .@y, UNITTYPE_MOB, getd("$@CR_MonsterArray"+.@j+""+.@k+"["+.@i+"]"));
					if(unitisfighting(getd("$@CR_MonsterArray"+.@j+""+.@k+"["+.@i+"]"))) continue;
					if(.@j == 1) {
				
						unitwalk getd("$@CR_MonsterArray"+.@j+""+.@k+"["+.@i+"]"),.@x,.@y-6,"",1;
					
					} else {
					
						unitwalk getd("$@CR_MonsterArray"+.@j+""+.@k+"["+.@i+"]"),.@x,.@y+6,"",1;
						
					}
				} else {
					deletearray getd("$@CR_MonsterArray"+.@j+""+.@k+"["+.@i+"]"),1;
				} 
			}
		}
	}
	initnpctimer;
	end;
	
	
OnEndMatch:
	stopnpctimer;
	end;
}
clashroyale,0,0,0	script	ElixirCR	-1,{

OnStartMatch:
	initnpctimer;
	end;
	
OnTimer5000:
	stopnpctimer;
	if($@CR_Status != 1) end;
	$@CR_ElixirCR1 += 3;
	$@CR_ElixirCR2 += 3;
	if($@CR_ElixirCR1 > 10)
		$@CR_ElixirCR1 = 10;
	if($@CR_ElixirCR2 > 10)
		$@CR_ElixirCR2 = 10;
	bg_updatescore "clashroyale",$@CR_ElixirCR1,$@CR_ElixirCR2;
	cleararray $@bgmembers$,"",getarraysize($@bgmembers$);
	bg_get_data($@CR_Team1,1);
	.@c = bg_get_data($@CR_Team1,0);
	copyarray .@name$[0], $@bgmembers$[0], .@c;
	for(.@i=0; .@i < .@c; .@i++){
		if( attachrid(getcharid(3,.@name$[.@i])) ){
			dispbottom "Your team just earned 3 elixirs. You can see your total points on upper right side.";
			detachrid();
		}
	}
	cleararray $@bgmembers$,"",getarraysize($@bgmembers$);
	bg_get_data($@CR_Team2,1);
	.@c = bg_get_data($@CR_Team2,0);
	copyarray .@name$[0], $@bgmembers$[0], .@c;
	for(.@i=0; .@i < .@c; .@i++){
		if( attachrid(getcharid(3,.@name$[.@i])) ){
			dispbottom "Your team just earned 3 elixirs. You can see your total points on upper right side.";
			detachrid();
		}
	}
	initnpctimer;
	end;
	
OnEndMatch:
	stopnpctimer;
	end;
}
clashroyale,0,0,0	script	TimerMatchCR	-1,{

OnStartMatch:
	initnpctimer;
	end;
	
OnTimer240000:
	mapannounce "clashroyale.gat", "The match will end in 1 minute, give everything you have ! Last chance!",bc_map;	
	end;
	
OnTimer300000:
OnPrematureEnd:
	stopnpctimer;
	killmonsterall "clashroyale";
	$@CR_Status = 2;
	donpcevent "ElixirCR::OnEndMatch";
	donpcevent "MonsterCR::OnEndMatch";
	if ($@CR_tower1>$@CR_tower2) {
		mapannounce "clashroyale.gat", "Congrats red team !!",bc_map;	
		callfunc("Reward_BG",15,6);
	}
	else if ($@CR_tower1<$@CR_tower2) {
		mapannounce "clashroyale.gat", "Congrats blue team !!",bc_map;	
		callfunc("Reward_BG",6,15);
	}
	else {
		mapannounce "clashroyale.gat", "Draw !!",bc_map;	
		callfunc("Reward_BG",6,6);
	}
	sleep 5000;
	donpcevent "ClashRoyaleQueue::OnRotate";
	end;

}
clashroyale,60,96,5	script	Red Crystal#11CR	10027,{
	if($@CR_Status != 1) end;
	if(getcharid(4) != getd("$@CR_Team"+charat(strnpcinfo(2),0))) end;
	mes "["+strnpcinfo(1)+"]";
	mes "Spawn a monster?";
	mes "^636363Monster Name - Price^000000";
	next;
	.@menu$ = "";
	for(.@i=2;.@i<getarraysize($@CR_Monsters);.@i++) {
		.@menu$ += strmobinfo(1,$@CR_Monsters[.@i]) + " - "+$@CR_MElixirs[.@i] +" elixirs";
		if(.@i<getarraysize($@CR_Monsters)-1)
			.@menu$ += ":";
	}
	.@select = select(.@menu$);
	.@select += 1;
	
	mes "["+strnpcinfo(1)+"]";
	
	if(getd("$@CR_ElixirCR"+charat(strnpcinfo(2),0)) < $@CR_MElixirs[.@select]) {
		mes "You have no enough ressources to buy it now, please wait.";
		close;
	}
		
	if(charat(strnpcinfo(2),0) == "1")
		.@y = 90;
	else
		.@y = 59;
		
	if(charat(strnpcinfo(2),1) == "1")
		.@x = 60;
	else
		.@x = 71;		
		
	// remove elixir
	set getd("$@CR_ElixirCR"+charat(strnpcinfo(2),0)), getd("$@CR_ElixirCR"+charat(strnpcinfo(2),0)) - $@CR_MElixirs[.@select];
	// Create mob
	donpcevent ("CR"+charat(strnpcinfo(2),0)+"TOWER"+charat(strnpcinfo(2),1))+"::OnSpawn";
	.@mid = bg_monster( getd("$@CR_Team"+charat(strnpcinfo(2),0)),"clashroyale",.@x,.@y,"--ja--",$@CR_Monsters[.@select],"",$@CR_M_Size[.@select]);
	setunitdata .@mid,UMOB_MAXHP,	$@CR_M_HP[.@select];
	setunitdata .@mid,UMOB_HP,		$@CR_M_HP[.@select];
	setunitdata .@mid,UMOB_ATKMIN,	$@CR_M_Atk_min[.@select];
	setunitdata .@mid,UMOB_ATKMAX,	$@CR_M_Atk_max[.@select];
	setunitdata .@mid,UMOB_MATKMIN,	$@CR_M_Matk_min[.@select];
	setunitdata .@mid,UMOB_MATKMAX,	$@CR_M_Matk_max[.@select];
	setunitdata .@mid,UMOB_DEF,		$@CR_M_Def[.@select];
	setunitdata .@mid,UMOB_MDEF,		$@CR_M_Mdef[.@select];
	setunitdata .@mid,UMOB_ATKRANGE,	$@CR_M_Range[.@select];
	setunitdata .@mid,UMOB_STR,		$@CR_M_Str[.@select];
	setunitdata .@mid,UMOB_AGI,		$@CR_M_Agi[.@select];
	setunitdata .@mid,UMOB_VIT,		$@CR_M_Vit[.@select];
	setunitdata .@mid,UMOB_DEX,		$@CR_M_Dex[.@select];
	setunitdata .@mid,UMOB_LUK,		$@CR_M_Luk[.@select];
	setunitdata .@mid,UMOB_INT,		$@CR_M_Int[.@select];
	setunitdata .@mid,UMOB_SPEED,	$@CR_M_Speed[.@select];
	setarray getd("$@CR_MonsterArray"+charat(strnpcinfo(2),0)+""+charat(strnpcinfo(2),1)+"["+getarraysize(getd("$@CR_MonsterArray"+charat(strnpcinfo(2),0)))+""+charat(strnpcinfo(2),1)+"]"), .@mid;
	
	bg_updatescore "clashroyale",$@CR_ElixirCR1,$@CR_ElixirCR2;
	
	mes "Spawned with succes!";
	close;
}
clashroyale,71,96,3	duplicate(Red Crystal#11CR)	Red Crystal#12CR	10027
clashroyale,60,53,5	duplicate(Red Crystal#11CR)	Blue Crystal#21CR	10027
clashroyale,71,53,3	duplicate(Red Crystal#11CR)	Blue Crystal#22CR	10027

clashroyale	mapflag	battleground	2
clashroyale	mapflag	noicewall
clashroyale	mapflag	nomemo
clashroyale	mapflag	noteleport
clashroyale	mapflag	nowarp
clashroyale	mapflag	nosave	SavePoint
clashroyale	mapflag	nopenalty
clashroyale	mapflag	nobranch
clashroyale	mapflag	noexp